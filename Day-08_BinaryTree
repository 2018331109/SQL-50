606. Construct String from Binary Tree

STATEMENT
Given the root of a binary tree, construct a string consisting of parenthesis and integers from a binary tree with 
the preorder traversal way, and return it.
Omit all the empty parenthesis pairs that do not affect the one-to-one mapping relationship between the string and 
the original binary tree.

SUBMISSION

C++
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution
{
public:
    string tree2str(TreeNode* root)
    {
        if(root == NULL)
        {
            return "";
        }
        
        string result=to_string(root->val);
        
        string left=tree2str(root->left);
        string right=tree2str(root->right);
        
        if(root->left == NULL && root->right == NULL)
        {
            return result;
        }
        
        else if(root->left == NULL)
        {
            return result+"()"+"("+right+")";
        }
        
        else if(root->right == NULL)
        {
            return result+"("+left+")";
        }
        
        else
        {
            return result+"("+left+")"+"("+right+")";
        }
        

    }
};
